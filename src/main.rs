extern crate rust_lldp;

use std::thread;
use rust_lldp::NetParser;

mod layer2;
mod misc;

fn main() {
    let handle = thread::spawn(|| {
        NetParser::new().start()
    });

    let b = vec![0x01, 0x80, 0xc2, 0x00, 0x00, 0x0e, 0x00, 0x04,
                 0x96, 0x1f, 0xa7, 0x26, 0x88, 0xcc, 0x02, 0x07, 0x04, 0xdc, 0x39, 0x6f, 0x56, 0xff,
                 0x1e, 0x04, 0x07, 0x03, 0xdc, 0x39, 0x6f, 0x56,
                 0x6f, 0x56, 0x06, 0x02, 0x00, 0x3c, 0x08, 0x05,
                 0x4c, 0x41, 0x4e, 0x3a, 0x31, 0x0a, 0x09, 0x66,
                 0x72, 0x69, 0x74, 0x7a, 0x2e, 0x62, 0x6f, 0x78,
                 0x0c, 0x28, 0x41, 0x56, 0x4d, 0x20, 0x46, 0x52,
                 0x49, 0x54, 0x5a, 0x21, 0x42, 0x6f, 0x78, 0x20,
                 0x36, 0x34, 0x39, 0x30, 0x20, 0x43, 0x61, 0x62,
                 0x6c, 0x65, 0x20, 0x28, 0x6c, 0x67, 0x69, 0x29,
                 0x20, 0x31, 0x34, 0x31, 0x2e, 0x30, 0x37, 0x2e,
                 0x32, 0x39, 0x0e, 0x04, 0x00, 0x5c, 0x00, 0x5c,
                 0x10, 0x0c, 0x05, 0x01, 0xc0, 0xa8, 0xb2, 0x01,
                 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00];

    let p = layer2::ethernet::Ethernet::new(&b);

    println!("{}", p);

    loop {}
}

//0000011 000000010 00000000 1111000