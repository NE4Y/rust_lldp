extern crate rust_lldp;

use std::thread;
use rust_lldp::NetParser;

mod layer2;
mod misc;

fn main() {
    let handle = thread::spawn(|| {
        NetParser::new().start()
    });

    let b = vec![0x01, 0x80, 0xc2, 0x00, 0x00, 0x0e, 0x00, 0x04,
                 0x96, 0x1f, 0xa7, 0x26, 0x88, 0xcc, 0x02, 0x07, 0x04, 0x00, 0x04, 0x96, 0x1f, 0xa7,
                 0x26, 0x04, 0x04, 0x05, 0x31, 0x2f, 0x33, 0x06,
                 0x02, 0x00, 0x78, 0x06, 0x02, 0x00, 0x01, 0x06,
                 0x02, 0x00, 0x02, 0x06, 0x02, 0x00, 0x03, 0x00,
                 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
                 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
                 0xaa, 0xbb];

    let p = layer2::ethernet::Ethernet::new(&b);

    if let layer2::ethernet::EtherType::LLDP = p.get_ether_type() {
        let lldp = layer2::lldp::LLDPU::new(p.get_payload());

        println!("{}", lldp);
    }
}